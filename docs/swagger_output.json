{
  "openapi": "3.0.0",
  "info": {
    "title": "Trackpatrol API",
    "description": "API doc Documentation for Trackpatrol",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/",
      "description": "local server"
    },
    {
      "url": "https://trackpatrol.onrender.com/",
      "description": "production server"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication endpoints"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Endpoint to register a new user",
        "responses": {
          "200": {
            "description": "Registration successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Registration successful"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Registration successful"
                }
              }
            }
          },
          "409": {
            "description": "Username already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Username already exists"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Username already exists"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Validation error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Validation error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Registration req.body"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User Model": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "Shahbaz"
          },
          "name": {
            "type": "string",
            "example": "Shahbaz"
          },
          "password": {
            "type": "string",
            "example": "123456789"
          },
          "role": {
            "type": "string",
            "example": "admin"
          },
          "last_login": {
            "type": "string",
            "example": "2021-07-01T00:00:00.000Z"
          }
        },
        "required": [
          "username",
          "name",
          "password",
          "role"
        ],
        "xml": {
          "name": "User Model"
        }
      },
      "Success": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "number",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Success message"
          },
          "data": {
            "type": "object",
            "properties": {}
          }
        },
        "xml": {
          "name": "Success"
        }
      },
      "Internal server error": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "status": {
            "type": "number",
            "example": 500
          },
          "message": {
            "type": "string",
            "example": "Internal server error"
          },
          "stack": {
            "type": "string",
            "example": "Something went wrong"
          }
        },
        "xml": {
          "name": "Internal server error"
        }
      },
      "Validation error": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "status": {
            "type": "number",
            "example": 422
          },
          "message": {
            "type": "string",
            "example": "Validation error"
          },
          "errors": {
            "type": "array",
            "example": [],
            "items": {}
          }
        },
        "xml": {
          "name": "Validation error"
        }
      },
      "Registration req.body": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "Shahbaz"
          },
          "name": {
            "type": "string",
            "example": "Shahbaz"
          },
          "password": {
            "type": "string",
            "example": "123456789"
          },
          "role": {
            "type": "string",
            "example": "admin"
          }
        },
        "required": [
          "username",
          "name",
          "password",
          "role"
        ],
        "xml": {
          "name": "Registration req.body"
        }
      },
      "Registration successful": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "number",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "User registered successfully"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "60f0b6b3e6b3a51e3c9f0b1f"
              },
              "username": {
                "type": "string",
                "example": "shahbaz42"
              },
              "name": {
                "type": "string",
                "example": "Shahbaz"
              },
              "password": {
                "type": "string",
                "example": "123456789"
              },
              "role": {
                "type": "string",
                "example": "admin"
              },
              "last_login": {
                "type": "string",
                "example": "2021-07-16T07:25:07.000Z"
              },
              "__v": {
                "type": "number",
                "example": 0
              }
            }
          }
        },
        "xml": {
          "name": "Registration successful"
        }
      },
      "Username already exists": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "status": {
            "type": "number",
            "example": 409
          },
          "message": {
            "type": "string",
            "example": "Username already exists"
          },
          "stack": {
            "type": "string",
            "example": "Error: Username already exists ..."
          }
        },
        "xml": {
          "name": "Username already exists"
        }
      }
    }
  }
}