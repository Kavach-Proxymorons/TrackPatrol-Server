{
  "openapi": "3.0.0",
  "info": {
    "title": "Trackpatrol API",
    "description": "API doc Documentation for Trackpatrol",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/",
      "description": "local server"
    },
    {
      "url": "https://trackpatrol.onrender.com/",
      "description": "production server"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication endpoints"
    },
    {
      "name": "Admin : Personnel",
      "description": "Personnel endpoints"
    },
    {
      "name": "Admin : Duty",
      "description": "Duty endpoints"
    },
    {
      "name": "Admin : Hardware",
      "description": "Admin hardware endpoints"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/auth/": {
      "get": {
        "tags": [
          "Auth"
        ],
        "description": "Endpoint to get user auth details. Pass the JWT token in the authorization header as \"Bearer <token>\"",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User auth details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Authenticated"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Authenticated"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Endpoint to register a new user",
        "responses": {
          "200": {
            "description": "Registration successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Registration successful"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Registration successful"
                }
              }
            }
          },
          "409": {
            "description": "Username already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Username already exists"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Username already exists"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Validation error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Validation error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Registration req.body"
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Endpoint to login a user",
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Login successful"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Login successful"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized incorrect username or password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized incorrect username or password"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized incorrect username or password"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Validation error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Validation error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login req.body"
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/personnel/": {
      "post": {
        "tags": [
          "Admin : Personnel"
        ],
        "description": "Create a new personnel (requires role : \"admin\" )",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Personnel created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Personnel created successfully response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Personnel created successfully response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "sid already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Username already exists"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Username already exists"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Validation error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Validation error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create personnel req.body"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Admin : Personnel"
        ],
        "description": "Get all personnel with pagination (requires role : \"admin\" )",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit per page",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Personnel list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Personnel list response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Personnel list response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Validation error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Validation error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/admin/personnel/bulk_create/get_template": {
      "get": {
        "tags": [
          "Admin : Personnel"
        ],
        "description": "Endpoint to get the csv template for bulk personnel creation (requires role : \"admin\" )",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/admin/personnel/bulk_create": {
      "post": {
        "tags": [
          "Admin : Personnel"
        ],
        "description": "Endpoint to create multiple personnel records from a csv file (requires role : \"admin\") sample_file: https://docs.google.com/spreadsheets/d/1nREThXMnFuE5Rgo3XyY9hG5FYOPHe1J2o5NpZEsR26E/edit?usp=sharing",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Personnel bulk created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Personnel bulk creation successful response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Personnel bulk creation successful response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "csv_file": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": [
                  "csv_file"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/personnel/search": {
      "get": {
        "tags": [
          "Admin : Personnel"
        ],
        "description": "Search personnel by sid or name (requires role : \"admin\" )",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Search query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit per page",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Personnel list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Personnel list response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Personnel list response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Validation error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Validation error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/admin/personnel/{sid}": {
      "get": {
        "tags": [
          "Admin : Personnel"
        ],
        "description": "Get personnel by sid (requires role : \"admin\" )",
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "SID of personnel"
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Personnel details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Personnel details response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Personnel details response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Personnel not found response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Personnel not found response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Personnel not found response"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Validation error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Validation error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Admin : Personnel"
        ],
        "description": "Delete personnel by sid. (requires role : \"admin\" )",
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "SID of personnel"
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Personnel deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Personnel deleted successfully response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Personnel deleted successfully response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Personnel not found response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Personnel not found response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Personnel not found response"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Validation error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Validation error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Admin : Personnel"
        ],
        "description": "Update personnel by sid. (requires role : \"admin\" )",
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "SID of personnel"
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Personnel updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Personnel updated successfully response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Personnel updated successfully response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Personnel not found response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Personnel not found response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Personnel not found response"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Validation error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Validation error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create personnel req.body"
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/personnel/bulk_delete": {
      "delete": {
        "tags": [
          "Admin : Personnel"
        ],
        "description": "Delete multiple personnel by sid. (requires role : \"admin\" )",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Personnel deleted in bulk response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Personnel deleted in bulk response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Personnel deleted in bulk response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Personnel not found response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Personnel not found response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Personnel not found response"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Validation error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Validation error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Bulk delete personnel req.body"
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/hardware/": {
      "post": {
        "tags": [
          "Admin : Hardware"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hardware registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hardware created successfully response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Hardware created successfully response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "hardware_id already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hardware_id already exists response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Hardware_id already exists response"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Validation error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Validation error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create hardware req.body"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Admin : Hardware"
        ],
        "description": "Endpoint to fetch all Hardware",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page number",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit per page",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hardware fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hardware fetched successfully response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Hardware fetched successfully response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Validation error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Validation error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/admin/duty/": {
      "post": {
        "tags": [
          "Admin : Duty"
        ],
        "summary": "create a new duty.",
        "description": "Endpoint to create a new duty.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Validation error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Validation error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Create duty req.body"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Admin : Duty"
        ],
        "summary": "Get all duty in sorted order.",
        "description": "Endpoint to get all duty in sorted order.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of duty per page",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Duty fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Get duty res.body"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Get duty res.body"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Validation error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Validation error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/shift/": {
      "post": {
        "tags": [
          "Admin : Shift"
        ],
        "summary": "creates a new shift for a duty.",
        "description": "Endpoint to create a new shift.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Shift created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shift created successfully response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Shift created successfully response"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Validation error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Validation error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Create shift req.body"
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/shift/{id}": {
      "delete": {
        "tags": [
          "Admin : Shift"
        ],
        "summary": "deletes a shift from a duty.",
        "description": "Endpoint to delete a shift.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Shift ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Shift deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Shift not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Resource not found"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Internal server error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User Model": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "Shahbaz"
          },
          "name": {
            "type": "string",
            "example": "Shahbaz"
          },
          "password": {
            "type": "string",
            "example": "123456789"
          },
          "role": {
            "type": "string",
            "example": "admin"
          },
          "last_login": {
            "type": "string",
            "example": "2021-07-01T00:00:00.000Z"
          }
        },
        "required": [
          "username",
          "name",
          "password",
          "role"
        ],
        "xml": {
          "name": "User Model"
        }
      },
      "Success": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "number",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Successful"
          },
          "data": {
            "type": "object",
            "properties": {}
          }
        },
        "xml": {
          "name": "Success"
        }
      },
      "Internal server error": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "status": {
            "type": "number",
            "example": 500
          },
          "message": {
            "type": "string",
            "example": "Internal server error"
          },
          "stack": {
            "type": "string",
            "example": "Something went wrong"
          }
        },
        "xml": {
          "name": "Internal server error"
        }
      },
      "Validation error": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "status": {
            "type": "number",
            "example": 422
          },
          "message": {
            "type": "string",
            "example": "Validation error"
          },
          "errors": {
            "type": "array",
            "example": [],
            "items": {}
          }
        },
        "xml": {
          "name": "Validation error"
        }
      },
      "Resource not found": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "status": {
            "type": "number",
            "example": 404
          },
          "message": {
            "type": "string",
            "example": "Resource not found"
          },
          "stack": {
            "type": "string",
            "example": ""
          }
        },
        "xml": {
          "name": "Resource not found"
        }
      },
      "Authenticated": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "number",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Authorized"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "60f0b6b3e6b3a51e3c9f0b1f"
              },
              "username": {
                "type": "string",
                "example": "shahbaz42"
              },
              "name": {
                "type": "string",
                "example": "Shahbaz"
              },
              "role": {
                "type": "string",
                "example": "admin"
              },
              "last_login": {
                "type": "string",
                "example": "2021-07-16T07:25:07.000Z"
              },
              "__v": {
                "type": "number",
                "example": 0
              }
            }
          }
        },
        "xml": {
          "name": "Authenticated"
        }
      },
      "Unauthorized": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "status": {
            "type": "number",
            "example": 401
          },
          "message": {
            "type": "string",
            "example": "Unauthorized"
          }
        },
        "xml": {
          "name": "Unauthorized"
        }
      },
      "Forbidden": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "status": {
            "type": "number",
            "example": 403
          },
          "message": {
            "type": "string",
            "example": "Forbidden"
          }
        },
        "xml": {
          "name": "Forbidden"
        }
      },
      "Registration req.body": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "Shahbaz"
          },
          "name": {
            "type": "string",
            "example": "Shahbaz"
          },
          "password": {
            "type": "string",
            "example": "123456789"
          },
          "role": {
            "type": "string",
            "example": "admin"
          }
        },
        "required": [
          "username",
          "name",
          "password",
          "role"
        ],
        "xml": {
          "name": "Registration req.body"
        }
      },
      "Registration successful": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "number",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "User registered successfully"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "60f0b6b3e6b3a51e3c9f0b1f"
              },
              "username": {
                "type": "string",
                "example": "shahbaz42"
              },
              "name": {
                "type": "string",
                "example": "Shahbaz"
              },
              "role": {
                "type": "string",
                "example": "admin"
              },
              "last_login": {
                "type": "string",
                "example": "2021-07-16T07:25:07.000Z"
              },
              "__v": {
                "type": "number",
                "example": 0
              }
            }
          }
        },
        "xml": {
          "name": "Registration successful"
        }
      },
      "Username already exists": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "status": {
            "type": "number",
            "example": 409
          },
          "message": {
            "type": "string",
            "example": "Username already exists"
          },
          "stack": {
            "type": "string",
            "example": "Error: Username already exists ..."
          }
        },
        "xml": {
          "name": "Username already exists"
        }
      },
      "Login req.body": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "Shahbaz"
          },
          "password": {
            "type": "string",
            "example": "123456789"
          }
        },
        "required": [
          "username",
          "password"
        ],
        "xml": {
          "name": "Login req.body"
        }
      },
      "Unauthorized incorrect username or password": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "status": {
            "type": "number",
            "example": 401
          },
          "message": {
            "type": "string",
            "example": "Unauthorized : incorrect username or password"
          }
        },
        "xml": {
          "name": "Unauthorized incorrect username or password"
        }
      },
      "Login successful": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "number",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Login successful"
          },
          "data": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "example": "asdfjasldkfjlaskdfjlaskdjfasdffdasdfasdfas"
              },
              "expires_in": {
                "type": "string",
                "example": "30d"
              },
              "user": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "60f0b6b3e6b3a51e3c9f0b1f"
                  },
                  "username": {
                    "type": "string",
                    "example": "shahbaz42"
                  },
                  "name": {
                    "type": "string",
                    "example": "Shahbaz"
                  },
                  "role": {
                    "type": "string",
                    "example": "admin"
                  },
                  "last_login": {
                    "type": "string",
                    "example": "2021-07-16T07:25:07.000Z"
                  },
                  "__v": {
                    "type": "number",
                    "example": 0
                  }
                }
              }
            }
          }
        },
        "xml": {
          "name": "Login successful"
        }
      },
      "create personnel req.body": {
        "type": "object",
        "properties": {
          "sid": {
            "type": "string",
            "example": "123456789"
          },
          "temp_password": {
            "type": "string",
            "example": "123456789"
          },
          "official_name": {
            "type": "string",
            "example": "Shahbaz"
          },
          "designation": {
            "type": "string",
            "example": "Officer"
          },
          "photograph": {
            "type": "string",
            "example": "https://www.google.com"
          },
          "dob": {
            "type": "string",
            "example": "2000-07-16T07:25:07.000Z"
          },
          "blood_group": {
            "type": "string",
            "example": "A+"
          },
          "identification_mark": {
            "type": "string",
            "example": "None"
          },
          "posted_at": {
            "type": "string",
            "example": "Delhi"
          },
          "address": {
            "type": "string",
            "example": "Delhi"
          }
        },
        "required": [
          "sid",
          "temp_password",
          "official_name",
          "designation",
          "photograph",
          "dob",
          "blood_group",
          "identification_mark",
          "posted_at",
          "address"
        ],
        "xml": {
          "name": "create personnel req.body"
        }
      },
      "Personnel created successfully response": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "number",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Personnel created successfully"
          },
          "data": {
            "type": "object",
            "properties": {
              "sid": {
                "type": "string",
                "example": "123456789"
              },
              "user": {
                "type": "string",
                "example": "64aafc98b0370830e5cb5d48"
              },
              "official_name": {
                "type": "string",
                "example": "Shahbaz"
              },
              "designation": {
                "type": "string",
                "example": "Officer"
              },
              "photograph": {
                "type": "string",
                "example": "https://www.google.com"
              },
              "dob": {
                "type": "string",
                "example": "2000-07-16T07:25:07.000Z"
              },
              "blood_group": {
                "type": "string",
                "example": "A+"
              },
              "identification_mark": {
                "type": "string",
                "example": "None"
              },
              "posted_at": {
                "type": "string",
                "example": "Delhi"
              },
              "address": {
                "type": "string",
                "example": "Delhi"
              },
              "_id": {
                "type": "string",
                "example": "64aafc99b0370830e5cb5d4a"
              },
              "__v": {
                "type": "number",
                "example": 0
              }
            }
          }
        },
        "xml": {
          "name": "Personnel created successfully response"
        }
      },
      "Personnel bulk creation successful response": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "number",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Personnel created successfully"
          },
          "data": {
            "type": "object",
            "properties": {
              "bulk_user_create_result": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string",
                      "example": "101"
                    },
                    "name": {
                      "type": "string",
                      "example": "Shahbaz Ali"
                    },
                    "role": {
                      "type": "string",
                      "example": "personnel"
                    },
                    "_id": {
                      "type": "string",
                      "example": "64ab5bb1e68088f3e004906e"
                    },
                    "last_login": {
                      "type": "string",
                      "example": "2023-07-10T01:15:29.111Z"
                    },
                    "__v": {
                      "type": "number",
                      "example": 0
                    }
                  }
                }
              },
              "bulk_personnel_create_result": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "sid": {
                      "type": "string",
                      "example": "101"
                    },
                    "user": {
                      "type": "string",
                      "example": "64ab5bb1e68088f3e004906e"
                    },
                    "official_name": {
                      "type": "string",
                      "example": "Shahbaz Ali"
                    },
                    "designation": {
                      "type": "string",
                      "example": "officer"
                    },
                    "photograph": {
                      "type": "string",
                      "example": "https://link.png"
                    },
                    "dob": {
                      "type": "string",
                      "example": "2000-07-16T00:00:00.000Z"
                    },
                    "blood_group": {
                      "type": "string",
                      "example": "B-"
                    },
                    "identification_mark": {
                      "type": "string",
                      "example": "None"
                    },
                    "posted_at": {
                      "type": "string",
                      "example": "Delhi"
                    },
                    "address": {
                      "type": "string",
                      "example": "Delhi"
                    },
                    "_id": {
                      "type": "string",
                      "example": "64ab5bb1e68088f3e0049072"
                    },
                    "__v": {
                      "type": "number",
                      "example": 0
                    }
                  }
                }
              }
            }
          }
        },
        "xml": {
          "name": "Personnel bulk creation successful response"
        }
      },
      "Personnel list response": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "number",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Personnel list fetched successfully"
          },
          "data": {
            "type": "object",
            "properties": {
              "personnel": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "64aafded69d38a1c547c36ac"
                    },
                    "sid": {
                      "type": "string",
                      "example": "123456789"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "64aafded69d38a1c547c36aa"
                        },
                        "username": {
                          "type": "string",
                          "example": "123456789"
                        },
                        "name": {
                          "type": "string",
                          "example": "Shahbaz"
                        }
                      }
                    },
                    "official_name": {
                      "type": "string",
                      "example": "Shahbaz"
                    },
                    "designation": {
                      "type": "string",
                      "example": "Officer"
                    },
                    "photograph": {
                      "type": "string",
                      "example": "https://www.google.com"
                    },
                    "dob": {
                      "type": "string",
                      "example": "2000-07-16T07:25:07.000Z"
                    },
                    "blood_group": {
                      "type": "string",
                      "example": "A+"
                    },
                    "identification_mark": {
                      "type": "string",
                      "example": "None"
                    },
                    "posted_at": {
                      "type": "string",
                      "example": "Delhi"
                    },
                    "address": {
                      "type": "string",
                      "example": "Delhi"
                    },
                    "__v": {
                      "type": "number",
                      "example": 0
                    }
                  }
                }
              },
              "totalPages": {
                "type": "number",
                "example": 2
              },
              "currentPage": {
                "type": "string",
                "example": "1"
              }
            }
          }
        },
        "xml": {
          "name": "Personnel list response"
        }
      },
      "Personnel details response": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "number",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Personnel fetched successfully"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "64ab004508597db7a4e069c1"
              },
              "sid": {
                "type": "string",
                "example": "1"
              },
              "user": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "64ab004508597db7a4e069bf"
                  },
                  "username": {
                    "type": "string",
                    "example": "1"
                  },
                  "name": {
                    "type": "string",
                    "example": "Monkey"
                  }
                }
              },
              "official_name": {
                "type": "string",
                "example": "Monkey"
              },
              "designation": {
                "type": "string",
                "example": "jungle patrol"
              },
              "photograph": {
                "type": "string",
                "example": "https://www.google.com"
              },
              "dob": {
                "type": "string",
                "example": "2000-07-16T07:25:07.000Z"
              },
              "blood_group": {
                "type": "string",
                "example": "A+"
              },
              "identification_mark": {
                "type": "string",
                "example": "None"
              },
              "posted_at": {
                "type": "string",
                "example": "Delhi"
              },
              "address": {
                "type": "string",
                "example": "Delhi"
              },
              "__v": {
                "type": "number",
                "example": 0
              }
            }
          }
        },
        "xml": {
          "name": "Personnel details response"
        }
      },
      "Personnel not found response": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "status": {
            "type": "number",
            "example": 404
          },
          "message": {
            "type": "string",
            "example": "Personnel not found, please check the sid"
          },
          "stack": {
            "type": "string",
            "example": ""
          }
        },
        "xml": {
          "name": "Personnel not found response"
        }
      },
      "Bulk delete personnel req.body": {
        "type": "object",
        "properties": {
          "sids": {
            "type": "array",
            "example": [
              "1",
              "2",
              "3"
            ],
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "sids"
        ],
        "xml": {
          "name": "Bulk delete personnel req.body"
        }
      },
      "Personnel deleted in bulk response": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "number",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Personnel deleted successfully"
          },
          "data": {
            "type": "object",
            "properties": {
              "personnelDeleteResult": {
                "type": "object",
                "properties": {
                  "acknowledged": {
                    "type": "boolean",
                    "example": true
                  },
                  "deletedCount": {
                    "type": "number",
                    "example": 2
                  }
                }
              },
              "userDeleteResult": {
                "type": "object",
                "properties": {
                  "acknowledged": {
                    "type": "boolean",
                    "example": true
                  },
                  "deletedCount": {
                    "type": "number",
                    "example": 2
                  }
                }
              }
            }
          }
        },
        "xml": {
          "name": "Personnel deleted in bulk response"
        }
      },
      "Personnel deleted successfully response": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "number",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Personnel deleted successfully"
          },
          "data": {
            "type": "object",
            "properties": {
              "personnel": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "64ab2b88aea7531ce0825efd"
                  },
                  "sid": {
                    "type": "string",
                    "example": "2"
                  },
                  "user": {
                    "type": "string",
                    "example": "64ab2b88aea7531ce0825efb"
                  },
                  "official_name": {
                    "type": "string",
                    "example": "Shahbaz"
                  },
                  "designation": {
                    "type": "string",
                    "example": "Officer"
                  },
                  "photograph": {
                    "type": "string",
                    "example": "https://www.google.com"
                  },
                  "dob": {
                    "type": "string",
                    "example": "2000-07-16T07:25:07.000Z"
                  },
                  "blood_group": {
                    "type": "string",
                    "example": "A+"
                  },
                  "identification_mark": {
                    "type": "string",
                    "example": "None"
                  },
                  "posted_at": {
                    "type": "string",
                    "example": "Delhi"
                  },
                  "address": {
                    "type": "string",
                    "example": "Delhi"
                  },
                  "__v": {
                    "type": "number",
                    "example": 0
                  }
                }
              },
              "user": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "64ab2b88aea7531ce0825efb"
                  },
                  "username": {
                    "type": "string",
                    "example": "2"
                  },
                  "name": {
                    "type": "string",
                    "example": "Shahbaz"
                  },
                  "role": {
                    "type": "string",
                    "example": "personnel"
                  },
                  "last_login": {
                    "type": "string",
                    "example": "2023-07-09T21:50:00.139Z"
                  },
                  "__v": {
                    "type": "number",
                    "example": 0
                  }
                }
              }
            }
          }
        },
        "xml": {
          "name": "Personnel deleted successfully response"
        }
      },
      "Personnel updated successfully response": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "number",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Personnel updated successfully"
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "64aafded69d38a1c547c36ac"
              },
              "sid": {
                "type": "string",
                "example": "123456789"
              },
              "user": {
                "type": "string",
                "example": "64aafded69d38a1c547c36aa"
              },
              "official_name": {
                "type": "string",
                "example": "Shahbaz"
              },
              "designation": {
                "type": "string",
                "example": "Officer"
              },
              "photograph": {
                "type": "string",
                "example": "https://www.google.com"
              },
              "dob": {
                "type": "string",
                "example": "2000-07-16T07:25:07.000Z"
              },
              "blood_group": {
                "type": "string",
                "example": "B-"
              },
              "identification_mark": {
                "type": "string",
                "example": "None"
              },
              "posted_at": {
                "type": "string",
                "example": "Delhi"
              },
              "address": {
                "type": "string",
                "example": "Delhi"
              },
              "__v": {
                "type": "number",
                "example": 0
              }
            }
          }
        },
        "xml": {
          "name": "Personnel updated successfully response"
        }
      },
      "create hardware req.body": {
        "type": "object",
        "properties": {
          "hardware_id": {
            "type": "string",
            "example": "1"
          },
          "secret": {
            "type": "string",
            "example": "123456789"
          },
          "name": {
            "type": "string",
            "example": "uhf rfid unit 1"
          },
          "description": {
            "type": "string",
            "example": "uhf rfid unit 1"
          },
          "type": {
            "type": "string",
            "example": "uhf rfid"
          },
          "status": {
            "type": "string",
            "example": "idle"
          }
        },
        "xml": {
          "name": "create hardware req.body"
        }
      },
      "Hardware created successfully response": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "number",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Hardware registered successfully"
          },
          "data": {
            "type": "object",
            "properties": {
              "hardware_id": {
                "type": "string",
                "example": "2"
              },
              "secret": {
                "type": "string",
                "example": "123456789"
              },
              "name": {
                "type": "string",
                "example": "uhf rfid unit 1"
              },
              "description": {
                "type": "string",
                "example": "uhf rfid unit 1"
              },
              "type": {
                "type": "string",
                "example": "uhf rfid"
              },
              "status": {
                "type": "string",
                "example": "idle"
              },
              "_id": {
                "type": "string",
                "example": "64adad835080ec7a50ea369f"
              },
              "__v": {
                "type": "number",
                "example": 0
              }
            }
          }
        },
        "xml": {
          "name": "Hardware created successfully response"
        }
      },
      "Hardware_id already exists response": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "status": {
            "type": "number",
            "example": 409
          },
          "message": {
            "type": "string",
            "example": "Hardware id already exists"
          },
          "stack": {
            "type": "string",
            "example": ""
          }
        },
        "xml": {
          "name": "Hardware_id already exists response"
        }
      },
      "Hardware fetched successfully response": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "number",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Hardware fetched successfully"
          },
          "data": {
            "type": "object",
            "properties": {
              "hardware": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "64ac934f0a1b0e81592ef533"
                    },
                    "hardware_id": {
                      "type": "string",
                      "example": "1"
                    },
                    "secret": {
                      "type": "string",
                      "example": "123456789"
                    },
                    "name": {
                      "type": "string",
                      "example": "uhf rfid unit 1"
                    },
                    "description": {
                      "type": "string",
                      "example": "uhf rfid unit 1"
                    },
                    "type": {
                      "type": "string",
                      "example": "uhf rfid"
                    },
                    "status": {
                      "type": "string",
                      "example": "idle"
                    },
                    "__v": {
                      "type": "number",
                      "example": 0
                    }
                  }
                }
              },
              "totalPages": {
                "type": "number",
                "example": 2
              },
              "currentPage": {
                "type": "string",
                "example": "1"
              }
            }
          }
        },
        "xml": {
          "name": "Hardware fetched successfully response"
        }
      },
      "Create duty req.body": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Ghaziabad Mela Duty"
          },
          "description": {
            "type": "string",
            "example": "Ghaziabad Mela Duty"
          },
          "venue": {
            "type": "string",
            "example": "Ghaziabad"
          },
          "location": {
            "type": "string",
            "example": "28.6543728,77.409437"
          },
          "start_time": {
            "type": "string",
            "example": "2021-07-16T07:25:07.000Z"
          },
          "end_time": {
            "type": "string",
            "example": "2021-07-16T07:25:07.000Z"
          },
          "note": {
            "type": "string",
            "example": "None"
          }
        },
        "xml": {
          "name": "Create duty req.body"
        }
      },
      "Get duty res.body": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "number",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Duty fetched successfully"
          },
          "data": {
            "type": "object",
            "properties": {
              "duty": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "64adc1982a9b6864cc61b521"
                    },
                    "title": {
                      "type": "string",
                      "example": "Ghaziabad Mela Duty"
                    },
                    "description": {
                      "type": "string",
                      "example": "Ghaziabad Mela Duty"
                    },
                    "venue": {
                      "type": "string",
                      "example": "Ghaziabad"
                    },
                    "location": {
                      "type": "string",
                      "example": "28.6543728,77.409437"
                    },
                    "start_time": {
                      "type": "string",
                      "example": "2023-07-16T07:25:07.000Z"
                    },
                    "end_time": {
                      "type": "string",
                      "example": "2023-07-18T07:25:07.000Z"
                    },
                    "note": {
                      "type": "string",
                      "example": "None"
                    },
                    "shifts": {
                      "type": "array",
                      "example": [],
                      "items": {}
                    },
                    "__v": {
                      "type": "number",
                      "example": 0
                    }
                  }
                }
              },
              "totalPages": {
                "type": "number",
                "example": 2
              },
              "currentPage": {
                "type": "string",
                "example": "1"
              }
            }
          }
        },
        "xml": {
          "name": "Get duty res.body"
        }
      },
      "Create shift req.body": {
        "type": "object",
        "properties": {
          "shift_name": {
            "type": "string",
            "example": "Ghaziabad Mela Duty Shift 1"
          },
          "start_time": {
            "type": "string",
            "example": "2023-07-18T07:25:07.000Z"
          },
          "end_time": {
            "type": "string",
            "example": "2023-07-18T07:25:07.000Z"
          },
          "duty": {
            "type": "string",
            "example": "64adc1982a9b6864cc61b521"
          }
        },
        "xml": {
          "name": "Create shift req.body"
        }
      },
      "Shift created successfully response": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "number",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Shift created successfully"
          },
          "data": {
            "type": "object",
            "properties": {
              "shift_name": {
                "type": "string",
                "example": "Ghaziabad Mela Duty Shift 3"
              },
              "duty": {
                "type": "string",
                "example": "64adc1982a9b6864cc61b521"
              },
              "start_time": {
                "type": "string",
                "example": "2023-07-18T07:25:07.000Z"
              },
              "end_time": {
                "type": "string",
                "example": "2023-07-18T07:25:07.000Z"
              },
              "hardwares_attached": {
                "type": "array",
                "example": [],
                "items": {}
              },
              "_id": {
                "type": "string",
                "example": "64ade0eabd76d9ec1d2dd9c9"
              },
              "personnel_assigned": {
                "type": "array",
                "example": [],
                "items": {}
              },
              "__v": {
                "type": "number",
                "example": 0
              }
            }
          }
        },
        "xml": {
          "name": "Shift created successfully response"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}